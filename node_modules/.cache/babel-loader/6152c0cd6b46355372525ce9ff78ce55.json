{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\legion\\\\Desktop\\\\weatherapp\\\\src\\\\App.js\";\nimport React from 'react'; // import {Spring, animated, transition} from 'react-spring'\n\nimport './App.css';\nimport Weather from './Weather';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      api: 'http://api.openweathermap.org/data/2.5/weather?q=',\n      apiKey: 'd3c8c876ccc60478a8b2beb0fec1ea7f',\n      load: false,\n      title: 'Weather App',\n      city: 'Bucharest',\n      lang: 'RO',\n      wheater: ''\n    };\n    this.getWeather = this.getWeather.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  async fetchData() {\n    let request = this.state.api + this.state.city + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang;\n    const response = await fetch(request);\n    const json = await response.json();\n    this.setState({\n      weather: json\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getWeather() {\n    this.setState({\n      load: false\n    });\n    this.fetchData();\n\n    if (this.state.weather.cod === 200) {\n      this.setState({\n        load: true\n      });\n    } else {\n      alert(\"Unknown city\" + this.state.weather.cod);\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Powered by T.Valentin\"))), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Body\"), React.createElement(\"input\", {\n      onChange: e => this.handleInput(e),\n      placeholder: \"City\",\n      id: \"city\",\n      name: \"city\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Weather for\"), this.state.load ? React.createElement(Weather, {\n      weather: this.state.weather,\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) : '')), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Weather App v1 \\xA9 T.Valentin\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/legion/Desktop/weatherapp/src/App.js"],"names":["React","Weather","App","Component","constructor","state","api","apiKey","load","title","city","lang","wheater","getWeather","bind","handleInput","fetchData","request","response","fetch","json","setState","weather","componentDidMount","cod","alert","e","target","name","value","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// import {Spring, animated, transition} from 'react-spring'\nimport './App.css';\nimport Weather from './Weather'\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      api: 'http://api.openweathermap.org/data/2.5/weather?q=',\n      apiKey: 'd3c8c876ccc60478a8b2beb0fec1ea7f',\n      load: false,\n      title: 'Weather App',\n      city: 'Bucharest',\n      lang: 'RO',\n      wheater: '',\n    }\n    this.getWeather = this.getWeather.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n    this.fetchData = this.fetchData.bind(this)\n  }\n  async fetchData() {\n    let request = (this.state.api + this.state.city + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang)\n    const response = await fetch(request)\n    const json = await response.json();\n    this.setState({\n      weather: json\n    })\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  getWeather() {\n    this.setState({\n      load: false\n    })\n    this.fetchData();\n    if (this.state.weather.cod === 200) {\n      this.setState({\n        load: true\n      })\n    } else {\n      alert(\"Unknown city\" + this.state.weather.cod)\n    }\n  }\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"header\">\n          <div className=\"container\">\n            <h1>{this.state.title}</h1>\n            <p>Powered by T.Valentin</p>\n          </div>\n        </div>\n        <div className=\"body\">\n          <div className=\"container\">\n            <label htmlFor=\"city\">\n            </label>\n            <h2>Body</h2>\n            <input onChange={(e) => this.handleInput(e)} placeholder=\"City\" id=\"city\" name=\"city\" type=\"text\" />\n            <button onClick={this.getWeather}>Weather for</button>\n            {this.state.load ? <Weather weather={this.state.weather} city={this.state.city} /> : ''}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div className=\"container\">\n            <h3>Weather App v1 Â© T.Valentin</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}