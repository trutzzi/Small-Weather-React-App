{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\legion\\\\Desktop\\\\weatherapp\\\\src\\\\App.js\";\nimport React from 'react'; // import {Spring, animated, transition} from 'react-spring'\n\nimport './App.css';\nimport Weather from './Weather';\nimport SimpleExample from './SimpleMap';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      api: 'http://api.openweathermap.org/data/2.5/weather?q=',\n      apiKey: 'd3c8c876ccc60478a8b2beb0fec1ea7f',\n      load: false,\n      title: 'Weather App',\n      city: 'Bucharest',\n      lang: 'RO',\n      wheater: '',\n      long: '',\n      lat: ''\n    };\n    this.getWeather = this.getWeather.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  async fetchData(mod) {\n    let request;\n\n    switch (mod) {\n      case 2:\n        request = this.state.api + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang + '&lon' + this.state.long + '&lat=' + this.state.lat;\n        break;\n\n      default:\n        request = this.state.api + this.state.city + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang;\n        break;\n    }\n\n    console.log(request);\n    const response = await fetch(request);\n    const json = await response.json();\n    this.setState({\n      weather: json\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getWeather() {\n    this.setState({\n      load: false\n    });\n    this.fetchData();\n\n    if (this.state.weather.cod === 200) {\n      this.setState({\n        load: true\n      });\n    } else {\n      alert(\"Unknown city\" + this.state.weather.cod);\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onViewportChanged(viewport) {\n    let {\n      center\n    } = viewport;\n    let [lat, long] = center;\n    console.log(lat, long);\n    this.setState({\n      lat: lat,\n      long: long\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Powered by T.Valentin\"), React.createElement(\"select\", {\n      onChange: this.handleInput,\n      name: \"lang\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"RO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Romana\"), React.createElement(\"option\", {\n      value: \"EN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"English\"), React.createElement(\"option\", {\n      value: \"RU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Russian\")))), React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Body\"), React.createElement(\"input\", {\n      onChange: e => this.handleInput(e),\n      placeholder: \"City\",\n      id: \"city\",\n      name: \"city\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Get Weather\"), this.state.load ? React.createElement(Weather, {\n      view: this.onViewportChanged,\n      weather: this.state.weather,\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }) : '')), React.createElement(\"div\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Weather App v1 \\xA9 T.Valentin\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/legion/Desktop/weatherapp/src/App.js"],"names":["React","Weather","SimpleExample","App","Component","constructor","state","api","apiKey","load","title","city","lang","wheater","long","lat","getWeather","bind","handleInput","fetchData","mod","request","console","log","response","fetch","json","setState","weather","componentDidMount","cod","alert","e","target","name","value","onViewportChanged","viewport","center","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// import {Spring, animated, transition} from 'react-spring'\nimport './App.css';\nimport Weather from './Weather'\nimport SimpleExample from './SimpleMap'\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      api: 'http://api.openweathermap.org/data/2.5/weather?q=',\n      apiKey: 'd3c8c876ccc60478a8b2beb0fec1ea7f',\n      load: false,\n      title: 'Weather App',\n      city: 'Bucharest',\n      lang: 'RO',\n      wheater: '',\n      long :'',\n      lat: '',\n    }\n    this.getWeather = this.getWeather.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n    this.fetchData = this.fetchData.bind(this)\n  }\n  async fetchData(mod) {\n    let request\n    switch (mod) {\n      case 2:\n        request = (this.state.api + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang + '&lon' + this.state.long + '&lat=' + this.state.lat)\n        break\n      default:\n        request = (this.state.api + this.state.city + '&appid=' + this.state.apiKey + '&lang=' + this.state.lang)\n        break\n    }\n    console.log(request)\n    const response = await fetch(request)\n    const json = await response.json();\n    this.setState({\n      weather: json\n    })\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  getWeather() {\n    this.setState({\n      load: false\n    })\n    this.fetchData();\n    if (this.state.weather.cod === 200) {\n      this.setState({\n        load: true\n      })\n    } else {\n      alert(\"Unknown city\" + this.state.weather.cod)\n    }\n  }\n  handleInput(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  onViewportChanged(viewport) {\n    let { center } = viewport\n    let [lat, long] = center\n    console.log(lat, long)\n    this.setState({\n      lat: lat,\n      long: long\n    })\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"header\">\n          <div className=\"container\">\n            <h1>{this.state.title}</h1>\n            <p>Powered by T.Valentin</p>\n            <select onChange={this.handleInput} name=\"lang\">\n              <option value=\"RO\">Romana</option>\n              <option value=\"EN\">English</option>\n              <option value=\"RU\">Russian</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"body\">\n          <div className=\"container\">\n            <label htmlFor=\"city\">\n            </label>\n            <h2>Body</h2>\n            <input onChange={(e) => this.handleInput(e)} placeholder=\"City\" id=\"city\" name=\"city\" type=\"text\" />\n            <button onClick={this.getWeather}>Get Weather</button>\n            {this.state.load ? <Weather view={this.onViewportChanged} weather={this.state.weather} city={this.state.city} /> : ''}\n          </div>\n        </div>\n        <div className=\"footer\">\n          <div className=\"container\">\n            <h3>Weather App v1 © T.Valentin</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}