{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\legion\\\\Desktop\\\\weatherapp\\\\src\\\\Weather.js\";\nimport React from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport SimpleExample from './SimpleMap';\n\nfunction Weather(props) {\n  function calcCelsius(f) {\n    let Celsius = (f - 32) * 5 / 9;\n    return Celsius;\n  }\n\n  let {\n    weather,\n    coord,\n    main\n  } = props.weather;\n  return React.createElement(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props => React.createElement(\"div\", {\n    style: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"detail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon icon-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), props.city), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Showing weather for \", props.weather.name), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, weather[0].main), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, weather[0].description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Coord: \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), \" Lon \", coord.lon, \" and Lat \", coord.lat)), React.createElement(\"div\", {\n    className: \"detail2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"icon icon-temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Temperatures\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Main \", calcCelsius(main.temp), \" \"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Max \", calcCelsius(main.temp_max), \" \"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Min \", calcCelsius(main.temp_min), \" \"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Feels like \", calcCelsius(main.temp_min), \" \"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Humidity \", main.humidity, \"% \"))), React.createElement(SimpleExample, {\n    zoom: props.zoom,\n    view: props.view,\n    coord: coord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nexport default Weather;","map":{"version":3,"sources":["C:/Users/legion/Desktop/weatherapp/src/Weather.js"],"names":["React","Spring","SimpleExample","Weather","props","calcCelsius","f","Celsius","weather","coord","main","opacity","city","name","description","lon","lat","temp","temp_max","temp_min","humidity","zoom","view"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,aAA1B;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtB,QAAIC,OAAO,GAAG,CAACD,CAAC,GAAG,EAAL,IAAW,CAAX,GAAe,CAA7B;AACA,WAAOC,OAAP;AACD;;AACD,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,KAAK,CAACI,OAArC;AACA,SACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KADR;AAEE,IAAA,EAAE,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGP,KAAK,IAAI;AAAK,IAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,EAAiDA,KAAK,CAACQ,IAAvD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBR,KAAK,CAACI,OAAN,CAAcK,IAAtC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,OAAO,CAAC,CAAD,CAAP,CAAWE,IAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAAC,CAAD,CAAP,CAAWM,WAAf,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAV,WAAsBL,KAAK,CAACM,GAA5B,eAA0CN,KAAK,CAACO,GAAhD,CALF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUX,WAAW,CAACK,IAAI,CAACO,IAAN,CAArB,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASZ,WAAW,CAACK,IAAI,CAACQ,QAAN,CAApB,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASb,WAAW,CAACK,IAAI,CAACS,QAAN,CAApB,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBd,WAAW,CAACK,IAAI,CAACS,QAAN,CAA3B,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcT,IAAI,CAACU,QAAnB,OANF,CARF,CADF,EAkBE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEhB,KAAK,CAACiB,IAA3B;AAAiC,IAAA,IAAI,EAAEjB,KAAK,CAACkB,IAA7C;AAAmD,IAAA,KAAK,EAAEb,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADQ,CAHZ,CADF;AA4BD;;AAED,eAAeN,OAAf","sourcesContent":["import React from 'react';\nimport { Spring } from 'react-spring/renderprops'\nimport SimpleExample from './SimpleMap'\nfunction Weather(props) {\n  function calcCelsius(f) {\n    let Celsius = (f - 32) * 5 / 9;\n    return Celsius\n  }\n  let { weather, coord, main } = props.weather\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}>\n      {props => <div style={props}>\n        <React.Fragment>\n          <div className=\"details\">\n            <div className=\"detail1\">\n              <h3><span className=\"icon icon-location\"></span>{props.city}</h3>\n              <p>Showing weather for {props.weather.name}</p>\n              <h4>{weather[0].main}</h4>\n              <p>{weather[0].description}</p>\n              <p>Coord: <br /> Lon {coord.lon} and Lat {coord.lat}</p>\n            </div>\n            <div className=\"detail2\">\n              <h3><span className=\"icon icon-temp\"></span>Temperatures</h3>\n              <h4>Main {calcCelsius(main.temp)} </h4>\n              <h4>Max {calcCelsius(main.temp_max)} </h4>\n              <h4>Min {calcCelsius(main.temp_min)} </h4>\n              <h4>Feels like {calcCelsius(main.temp_min)} </h4>\n              <h4>Humidity {main.humidity}% </h4>\n            </div>\n          </div>\n          <SimpleExample zoom={props.zoom} view={props.view} coord={coord} />\n        </React.Fragment>\n      </div>}\n    </Spring>\n  );\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}